// <auto-generated />
using System;
using ConfigManagerStend.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConfigManagerStend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250813113110_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ConfigManagerStend.Domain.Entities.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateFileReplacement")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFileVerifiedToExist")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullPathFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameStand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ConfigManagerStend.Domain.Entities.ConfigStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConfigStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameStatus = "Подключен"
                        },
                        new
                        {
                            Id = 2,
                            NameStatus = "Отключен"
                        });
                });

            modelBuilder.Entity("ConfigManagerStend.Domain.Entities.Config", b =>
                {
                    b.HasOne("ConfigManagerStend.Domain.Entities.ConfigStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
